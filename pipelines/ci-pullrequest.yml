pool:
  vmImage: 'Ubuntu 16.04'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      shopt -s dotglob
      mv !(gopath) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: 'Set up the Go workspace'

  - script: |
      go get -v -t -d ./...
      go get -u github.com/jstemmer/go-junit-report
    workingDirectory: '$(modulePath)'
    displayName: 'go get dependencies'

  - script: |
      if [ -f Gopkg.toml ]; then
          curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
          dep ensure
      fi
    workingDirectory: '$(modulePath)'
    displayName: 'Download dep and run `dep ensure`'

  - script: |
      go test -v ./... 2>&1 | go-junit-report > report.xml
    workingDirectory: '$(modulePath)'
    displayName: 'Run tests'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '$(modulePath)/report.xml'

  - script: go build -v .
    workingDirectory: '$(modulePath)'
    displayName: 'Build'
